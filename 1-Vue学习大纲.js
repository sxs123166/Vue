
// 第一天：前端工程化与webpack

// 前端工程化的相关概念
// webpack的常见用法
// 打包发布
// Source Map

// 目标：了解工程化的前端开发方式
// 能够知道Webpack在实际开发中的作用

// 第二天：vue基础入门
// vue的基本使用步骤
// Vue中常用的指令
// vue-devtools工具

// 目标：能够使用Vue指令完成页面结构的渲染
// 能够使用Vue的调试工具辅助Vue的开发

// 第三天：vue基础入门
// 过滤器和倾听器
// 计算属性的用法
// axios的基本用法
// vue-cli的安装和使用

// 目标：
// 能够在实际开发中合理运用过滤器、倾听器、计算属性解决自己遇到的问题
// 能够使用axios发起Ajax请求
// 能够使用vue-cli工具生成工程化的Vue项目

// 第四天： 组件与生命周期
// 组件的注册与使用
// 组件的props自定义属性
// 解决组件样式冲突
// 组件的生命周期
// 组件之间的通讯（数据共享）

// 目标：
// 能够掌握.vue单文件组件的基本用法
// 能够掌握组件通讯的三种方式
// 能够掌握组件生命周期的执行顺序和应用场景

// 第五天：
// 使用ref引用DOM元素和组件实例
// $nextTick的基本使用
// 购物车案例

// 案例：
// 能够使用ref获取页面上DOM或组件的引用
// 能够知道$nextTick的应用场景并合理的应用
// 通过“购物车案例”工具之前学的所有知识

// 第六天：Vue组件的高级用法
// 动态组件的使用
// 插槽的使用
// 自定义指令
// ESLint的使用

// 目标：
// 能够使用keep-alive实现组件的缓存
// 能够使用插槽提高组件的复用性
// 能够了解常见的ESLint语法规则

// 第七天：路由
// 路由的基本配置与使用
// 路由重定向
// 嵌套路由、动态路由
// 编程式导航、路由导航前卫

// 目标：
// 能够在项目中安装和配置路由
// 能够使用路由实现单页面应用程序的开发
// 能够使用导航守卫控制路由的访问权限

// 第八天：黑马头条（收尾案例）
// Vant组件库
// 封装axios
// 上拉加载&下拉刷新
// Vant主题定制
